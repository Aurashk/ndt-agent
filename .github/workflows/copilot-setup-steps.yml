name: "Copilot Setup Steps"

# Allow testing of the setup steps from your repository's "Actions" tab.
on: workflow_dispatch

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # Need contents: read to clone the repository and install dependencies
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libfreetype6-dev \
            libpng-dev \
            libjpeg-dev \
            libtiff-dev

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Install package in development mode
        run: |
          pip install -e .

      - name: Install testing dependencies
        run: |
          pip install pytest pytest-cov pytest-xdist

      - name: Install code quality tools
        run: |
          pip install black flake8 mypy

      - name: Verify installation
        run: |
          python -c "import cscanmaker; print('CScanMaker package imported successfully')"
          python -c "import numpy, matplotlib, scipy; print('Core dependencies available')"

      - name: Create debug directory
        run: |
          mkdir -p debug
          chmod 755 debug

      - name: Set up environment variables
        run: |
          echo "PYTHONPATH=/github/workspace/src:$PYTHONPATH" >> $GITHUB_ENV
          echo "NDT_PROJECT_ROOT=/github/workspace" >> $GITHUB_ENV

      - name: Display environment info
        run: |
          echo "Python version: $(python --version)"
          echo "Pip version: $(pip --version)"
          echo "Working directory: $(pwd)"
          echo "Python path: $PYTHONPATH"
          pip list | grep -E "(numpy|matplotlib|scipy|cscanmaker)"
